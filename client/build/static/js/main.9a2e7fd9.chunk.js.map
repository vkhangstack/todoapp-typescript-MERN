{"version":3,"sources":["components/TodoItem.tsx","components/AddTodo.tsx","services/API.ts","App.tsx","index.tsx"],"names":["Todo","todo","updateTodo","deleteTodo","checkTodo","status","className","name","description","onClick","_id","AddTodo","saveTodo","useState","formData","setFormData","handleForm","e","currentTarget","id","value","onSubmit","htmlFor","onChange","type","disabled","undefined","baseUrl","getTodos","a","axios","get","todos","addTodo","post","todoUpdate","put","delete","App","setTodos","useEffect","fetchTodos","then","data","catch","err","console","error","handleUpdateTodo","Error","log","handleDeleteTodo","preventDefault","map","TodoItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a2e7fd9.chunk.js","sourcesContent":["import React from \"react\";\n\ntype Props = TodoProps & {\n  updateTodo: (todo: ITodo) => void;\n  deleteTodo: (_id: string) => void;\n};\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\n  const checkTodo: string = todo.status ? `line-through` : \"\";\n  return (\n    <div className=\"Card\">\n      <div className=\"Card--text\">\n        <h1 className={checkTodo}>{todo.name}</h1>\n        <span className={checkTodo}>{todo.description}</span>\n      </div>\n      <div className=\"Card--button\">\n        <button\n          onClick={() => updateTodo(todo)}\n          className={todo.status ? `hide-button` : \"Card--button__done\"}\n        >\n          Complete\n        </button>\n        <button\n          onClick={() => deleteTodo(todo._id)}\n          className=\"Card--button__delete\"\n        >\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React, { useState } from \"react\";\n\ntype Props = {\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void;\n};\n\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\n  const [formData, setFormData] = useState<ITodo | {}>();\n\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\n    setFormData({\n      ...formData,\n      [e.currentTarget.id]: e.currentTarget.value,\n    });\n  };\n\n  return (\n    <form className=\"Form\" onSubmit={(e) => saveTodo(e, formData)}>\n      <div>\n        <div>\n          <label htmlFor=\"name\">Name</label>\n          <input onChange={handleForm} type=\"text\" id=\"name\" />\n        </div>\n        <div>\n          <label htmlFor=\"description\">Description</label>\n          <input onChange={handleForm} type=\"text\" id=\"description\" />\n        </div>\n      </div>\n      <button disabled={formData === undefined ? true : false}>Add Todo</button>\n    </form>\n  );\n};\n\nexport default AddTodo;\n","import axios, { AxiosResponse } from \"axios\";\n\nconst baseUrl: string = \"https://backend-mytodo.herokuapp.com\";\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\n      baseUrl + \"/todos\"\n    );\n    return todos;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const addTodo = async (\n  formData: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todo: Omit<ITodo, \"_id\"> = {\n      name: formData.name,\n      description: formData.description,\n      status: false,\n    };\n    const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n      baseUrl + \"/add-todo\",\n      todo\n    );\n    return saveTodo;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const updateTodo = async (\n  todo: ITodo\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const todoUpdate: Pick<ITodo, \"status\"> = {\n      status: true,\n    };\n    const updateTodo: AxiosResponse<ApiDataType> = await axios.put(\n      `${baseUrl}/edit-todo/${todo._id}`,\n      todoUpdate\n    );\n    return updateTodo;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const deleteTodo = async (\n  _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n  try {\n    const deleteTodo: AxiosResponse<ApiDataType> = await axios.delete(\n      `${baseUrl}/delete-todo/${_id}`\n    );\n    return deleteTodo;\n  } catch (error) {\n    throw error;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/TodoItem\";\nimport AddTodo from \"./components/AddTodo\";\nimport { getTodos, addTodo, updateTodo, deleteTodo } from \"./services/API\";\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = (): void => {\n    getTodos()\n      .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\n      .catch((err: Error) => console.error(err));\n  };\n\n  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\n    e.preventDefault();\n    addTodo(formData)\n      .then(({ status, data }) => {\n        if (status !== 201) {\n          throw new Error(\"Error! Todo not saved\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.error(err));\n  };\n\n  const handleUpdateTodo = (todo: ITodo): void => {\n    updateTodo(todo)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not updated\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleDeleteTodo = (_id: string): void => {\n    deleteTodo(_id)\n      .then(({ status, data }) => {\n        if (status !== 200) {\n          throw new Error(\"Error! Todo not deleted\");\n        }\n        setTodos(data.todos);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <main className=\"App\">\n      <h1>My Todos</h1>\n      <AddTodo saveTodo={handleSaveTodo} />\n      {todos.map((todo: ITodo) => (\n        <TodoItem\n          key={todo._id}\n          updateTodo={handleUpdateTodo}\n          deleteTodo={handleDeleteTodo}\n          todo={todo}\n        />\n      ))}\n    </main>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}